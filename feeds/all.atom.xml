<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>suzuke's blog</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2020-05-24T00:23:00+08:00</updated><entry><title>用Python在Github上寫網誌</title><link href="/writing-blog-with-github.html" rel="alternate"></link><published>2020-05-12T22:20:00+08:00</published><updated>2020-05-24T00:23:00+08:00</updated><author><name>suzuke</name></author><id>tag:None,2020-05-12:/writing-blog-with-github.html</id><summary type="html"></summary><content type="html">&lt;h2&gt;Step0. 前言&lt;/h2&gt;
&lt;p&gt;其實早在很久之前，就一直聽聞 Github 可以透過靜態頁面的方式來寫網誌。但終沒有認真的找個時間好好的研究，剛好這一次的每週活動是需要練習寫文章，也就藉著這次的機會，順便研究一下到底要怎麼透過 Github 來寫網誌。&lt;/p&gt;
&lt;h2&gt;Step1. 安裝 Pelican 和建立 git repository&lt;/h2&gt;
&lt;p&gt;首先必須先安裝 &lt;strong&gt;Pelican&lt;/strong&gt; 和 &lt;strong&gt;ghp-import&lt;/strong&gt;，我們可以非常簡單地透過 pip 來安裝。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ pip install pelican ghp-import&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Pelican 提供兩種編寫文章的格式，分別是 reStructuredText 跟 Markdown，因為我自己本身對 Markdown比較熟悉，所以這邊我選擇使用 Markdown，一樣透過 pip 來安裝 Markdown。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ pip install Markdown&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安裝完所需要的軟體，再來我們需要在 Github 上建立一個空的 git 資料庫(repository)。
不知道怎麼建立 git 資料庫的人，可以參考&lt;a href="https://help.github.com/en/github/getting-started-with-github/create-a-repo"&gt;這裡&lt;/a&gt;。
記得這個資料庫的命名一定要是以下這種形式：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://github.com/username/username.github.io&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;接著我們就把它 clone 下來吧！&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone https://github.com/username/username.github.io blog
$ cd blog
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Step2. 建立 Content branch&lt;/h2&gt;
&lt;p&gt;因為我們是使用 Markdown 格式寫完文章，再透過 Pelican 幫我們產生出靜態網頁所需要的資源，
一般來說我們會建議把 Markdown 格式的原始文件另外存放在另一個 branch 裡，這樣在管理上會簡單許多。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git checkout -b content
Switched to a new branch &amp;#39;content&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Step3. 設定 Pelican&lt;/h2&gt;
&lt;p&gt;現在我們要開始對 Pelican 做設定，Pelican    提供了一個快速的設定工具 &lt;strong&gt;pelican-quickstart&lt;/strong&gt;，只要依序回答完問題，就可以完成設定了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pelican-quickstart
Welcome to pelican-quickstart v4.2.0.

This script will help you create a new Pelican-based website.

Please answer the following questions so this script can generate the files
needed by Pelican.

&amp;gt; Where do you want to create your new web site? [.] 
&amp;gt; What will be the title of this web site? suzuke&amp;#39;s blog
&amp;gt; Who will be the author of this web site? suzuke
&amp;gt; What will be the default language of this web site? [zh] 
&amp;gt; Do you want to specify a URL prefix? e.g., https://example.com   (Y/n) n
&amp;gt; Do you want to enable article pagination? (Y/n) 
&amp;gt; How many articles per page do you want? [10] 
&amp;gt; What is your time zone? [Europe/Paris] Asia/Taipei
&amp;gt; Do you want to generate a tasks.py/Makefile to automate generation and publishing? (Y/n) 
&amp;gt; Do you want to upload your website using FTP? (y/N) 
&amp;gt; Do you want to upload your website using SSH? (y/N) 
&amp;gt; Do you want to upload your website using Dropbox? (y/N) 
&amp;gt; Do you want to upload your website using S3? (y/N) 
&amp;gt; Do you want to upload your website using Rackspace Cloud Files? (y/N) 
&amp;gt; Do you want to upload your website using GitHub Pages? (y/N) y
&amp;gt; Is this your personal page (username.github.io)? (y/N) y
Done. Your new project is available at /Users/username/blog
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;設定完之後，可以看一下現在目前的資料夾內是長這個樣子的。每個檔案的功能可以到  &lt;a href="https://docs.getpelican.com/en/stable/"&gt;Pelican文件&lt;/a&gt; 查詢。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ls
Makefile                content/        develop_server.sh*
fabfile.py              output/         pelicanconf.py
publishconf.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最後再將這些 Pelican 產生出來的檔案，都 commit 和 push 到 content branch上吧，這樣我們就完成了前置的設定囉。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git add .
$ git commit -m &amp;#39;initial pelican commit to content&amp;#39;
$ git push origin content
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Step4. 編寫你的第一篇文章&lt;/h2&gt;
&lt;p&gt;恭喜你可以開始建立跟編寫你的第一篇文章囉！ 這邊我們也順便把 &lt;strong&gt;關於我&lt;/strong&gt; 的頁面也都一併建立出來吧。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cd content
$ mkdir pages images
$ cp /Users/username/SecretStash/HotPhotoOfMe.jpg images
$ touch first-post.md
$ touch pages/about.md
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;用文字編輯器打開 first-post.md 來編寫你的文章，格式如下，&lt;a href="https://docs.getpelican.com/en/stable/content.html#file-metadata"&gt;詳細見這&lt;/a&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Title: 我的第一篇文章
Date: 2020-05-12 20:20
Modified: 2020-05-12 23:30
Category: Python
Tags: pelican, publishing
Slug: writing-python-with-github
Authors: Suzuke
Summary: 我是摘要

文章的內容在這裡唷！
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;編輯 &lt;strong&gt;關於我&lt;/strong&gt; 的頁面，打開 &lt;code&gt;pages/about.md&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;title: 關於我
date: 2020-05-12

![handsomeguy]({static}/images/HotPhotoOfMe.jpg)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用 Pelican 產生靜態網頁到 output 資料夾：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ pelican content -o output -s publishconf.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Pelican 也提供本地端預覽 &lt;code&gt;http://localhost:8000/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ pelican --listen&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;都確認沒問題之後使用 ghp-import 把 output 的內容都 commit &amp;amp; push 到 master branch 上：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ghp-import -m &amp;quot;Generate Pelican site&amp;quot; --no-jekyll -b master output
$ git push origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最後把本地端 content 裡的 Markdown 原始文件都 commit &amp;amp; push 到遠端 github 上：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git add content
$ git commit -m &amp;#39;added a first post, a photo and an about page
$ git push origin content
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Step5. 參考資料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://opensource.com/article/19/5/run-your-blog-github-pages-python"&gt;run-your-blog-github-pages-python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.getpelican.com/en/stable/"&gt;Pelican docs&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="Python"></category><category term="pelican"></category><category term="publishing"></category></entry><entry><title>第一篇文章</title><link href="/di-yi-pian-wen-zhang.html" rel="alternate"></link><published>2020-05-12T00:00:00+08:00</published><updated>2020-05-12T00:00:00+08:00</updated><author><name>suzuke</name></author><id>tag:None,2020-05-12:/di-yi-pian-wen-zhang.html</id><content type="html">&lt;h1&gt;測試文章&lt;/h1&gt;
&lt;p&gt;這是我的第一篇測試文章&lt;/p&gt;</content><category term="misc"></category></entry></feed>